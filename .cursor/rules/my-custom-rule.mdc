---
description: 
globs: 
alwaysApply: true
---

La primera regla es no hacer cambios a una funcionalidad existente sin antes consultarlo conmigo y confirmar que yo estoy de acuerdo con dicho cambio. 


1. **Mantener la arquitectura modular** en `src/`:

   * `src/routes/` para definir rutas por módulo
   * `src/controllers/` para la lógica de negocio
   * `src/db/` solo para conexión a PostgreSQL
   * `src/docs/` exclusivamente para archivos `.swagger.js`

2. Cada archivo Swagger debe documentar solo un módulo:

   * `productos.swagger.js`
   * `ventas.swagger.js`
   * `reportes.swagger.js`

---

### 🧠 Buenas prácticas de desarrollo

3. Siempre que crees una nueva ruta:

   * Define primero el **controlador**
   * Luego el **archivo de ruta**
   * Luego su documentación Swagger

4. Usa `async/await` en todos los controladores

   * Manejando errores con `try/catch`
   * Siempre responder con `res.status(...).json(...)`

5. Evita duplicar lógica de SQL en controladores.

   * Si usas la misma consulta en varios endpoints, considera moverla a un helper

---

### 🔐 Seguridad y entorno

6. No subir `.env` ni credenciales sensibles

   * Usa `.env.example` para compartir estructura de configuración

7. Usa `process.env` en todos los archivos que accedan a configuraciones

---

### 🧪 Control de versiones y commits

8. Usa mensajes de commit claros y con emojis cuando aplique. Ejemplos:

   * `✨ Agregar endpoint PUT /productos/:id`
   * `🐛 Corregir error en stock negativo`
   * `📝 Documentar GET /ventas en Swagger`

9. Cada cambio mayor (nueva ruta, endpoint o lógica de negocio) debe ir en **un solo commit** bien descrito

---

### 📘 Swagger / Documentación

10. Documentar cada nuevo endpoint **antes o justo después** de implementarlo
11. Mantener etiquetas Swagger (`tags`) consistentes:

* Productos → `[Productos]`
* Ventas → `[Ventas]`
* Reportes → `[Reportes]`

---

### 🚀 Extras para producción (futuro)

12. Preparar un archivo `start.sh` o `ecosystem.config.js` para despliegue automático
13. Si conectas a Vercel/Railway/Raspberry: documentar los pasos en `DEPLOY.md`

---

